public class BigDecimalAverageAccumulateFunction implements
    AccumulateFunction {

  /**
   * creates and returns a context object
   */
  public Serializable createContext() {
    return new AverageData();
  }

  /**
   * initializes this accumulator
   */
  public void init(Serializable context) throws Exception {
    AverageData data = (AverageData) context;
    data.count = 0;
    data.total = BigDecimal.ZERO;
  }

  /**
   * @return true if this accumulator supports reverse
   */
  public boolean supportsReverse() {
    return true;
  }

  /**
   * accumulate the given value, increases count
   */
  public void accumulate(Serializable context, Object value) {
    AverageData data = (AverageData) context;
    data.count++;
    data.total = data.total.add((BigDecimal) value);
  }

  /**
   * retracts accumulated amount, decreases count 
   */
  public void reverse(Serializable context, Object value)
      throws Exception {
    AverageData data = (AverageData) context;
    data.count++;
    data.total = data.total.subtract((BigDecimal) value);
  }

  /**
   * @return currently calculated value
   */
  public Object getResult(Serializable context)
      throws Exception {
    AverageData data = (AverageData) context;
    return data.count == 0 ? BigDecimal.ZERO : data.total
        .divide(BigDecimal.valueOf(data.count),
            RoundingMode.HALF_UP);
  }
